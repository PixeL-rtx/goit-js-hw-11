{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46775903-5820c4e6d789cb0cb95772c39';\nconst URL = 'https://pixabay.com/api/?';\n\nexport function photos(q, page = 1) {\n  const parametrs = new URLSearchParams({\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    page,\n    q,\n  });\n  return fetch(`${URL}${parametrs}`)\n    .then(response => {\n      if (!response.ok) {\n        iziToast.error({\n          title: 'Error',\n          message: 'Ups.. Something wrong',\n          position: 'topRight',\n        });\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .catch(error => console.log(error));\n}\n","export function markup(array) {\n  return array\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img\n              class=\"gallery-image\"\n              src=\"${webformatURL}\"\n              alt=\"${tags}\"\n              width=\"360\"\n            />\n          </a>\n          <ul class=\"gallery-item-info\">\n                <li class=\"info-block\">\n                  <h5>Likes</h5>\n                  <p>${likes}</p>\n                </li>\n                <li class=\"info-block\">\n                  <h5>Views</h5>\n                  <p>${views}</p>\n                </li>\n                <li class=\"info-block\">\n                  <h5>Comments</h5>\n                  <p>${comments}</p>\n                </li>\n                <li class=\"info-block\">\n                  <h5>Downloads</h5>\n                  <p>${downloads}</p>\n                </li>\n              </ul>\n            </li>`\n    )\n    .join('');\n}\n","// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Описаний в документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { photos } from './js/pixabay-api';\nimport { markup } from './js/render-functions';\nlet page = 1;\nconst searchForm = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nloader.style.display = 'none';\nsearchForm.addEventListener('submit', feedbackForm);\n\nfunction feedbackForm(event) {\n  event.preventDefault();\n  loader.style.display = 'block';\n  gallery.innerHTML = '';\n\n  const inputElement = event.target.elements.input;\n\n  const searchBtn = inputElement ? inputElement.value.trim() : '';\n\n  if (searchBtn.length === 0) {\n    loader.style.display = 'none';\n    return iziToast.error({\n      title: 'Error',\n      backgroundColor: 'tomato',\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n      messageColor: 'white',\n      messageSize: '20',\n      position: 'bottomRight',\n      close: true,\n      displayMode: 2,\n    });\n  }\n  photos(searchBtn, page)\n    .then(images => {\n      if (images.hits.length === 0) {\n        gallery.innerHTML = '';\n        return iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'bottomRight',\n        });\n      }\n      gallery.insertAdjacentHTML('beforeend', markup(images.hits));\n      lightbox.refresh();\n    })\n    .catch(error => {\n      console.log(error);\n      iziToast.error({\n        title: 'Error',\n        message: 'Something went wrong. Please try again later.',\n        position: 'topRight',\n      });\n    })\n    .finally(() => {\n      loader.style.display = 'none';\n    });\n}\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n"],"names":["API_KEY","URL","photos","q","page","parametrs","response","error","markup","array","webformatURL","largeImageURL","tags","likes","views","comments","downloads","searchForm","gallery","loader","feedbackForm","event","inputElement","searchBtn","iziToast","images","lightbox","SimpleLightbox"],"mappings":"iyBAAA,MAAMA,EAAU,qCACVC,EAAM,4BAEL,SAASC,EAAOC,EAAGC,EAAO,EAAG,CAClC,MAAMC,EAAY,IAAI,gBAAgB,CACpC,IAAKL,EACL,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,KAAAI,EACA,EAAAD,CACJ,CAAG,EACD,OAAO,MAAM,GAAGF,CAAG,GAAGI,CAAS,EAAE,EAC9B,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,eAAS,MAAM,CACb,MAAO,QACP,QAAS,wBACT,SAAU,UACpB,CAAS,EACK,IAAI,MAAM,6BAA6B,EAE/C,OAAOA,EAAS,MACtB,CAAK,EACA,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,CACtC,CCzBO,SAASC,EAAOC,EAAO,CAC5B,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,0CACkCL,CAAa;AAAA;AAAA;AAAA,qBAGlCD,CAAY;AAAA,qBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOFC,CAAK;AAAA;AAAA;AAAA;AAAA,uBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,uBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,uBAIRC,CAAS;AAAA;AAAA;AAAA,kBAI3B,EACA,KAAK,EAAE,CACZ,CC9BA,IAAIZ,EAAO,EACX,MAAMa,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/CA,EAAO,MAAM,QAAU,OACvBF,EAAW,iBAAiB,SAAUG,CAAY,EAElD,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpBF,EAAO,MAAM,QAAU,QACvBD,EAAQ,UAAY,GAEpB,MAAMI,EAAeD,EAAM,OAAO,SAAS,MAErCE,EAAYD,EAAeA,EAAa,MAAM,KAAM,EAAG,GAE7D,GAAIC,EAAU,SAAW,EACvB,OAAAJ,EAAO,MAAM,QAAU,OAChBK,EAAS,MAAM,CACpB,MAAO,QACP,gBAAiB,SACjB,QACE,2EACF,aAAc,QACd,YAAa,KACb,SAAU,cACV,MAAO,GACP,YAAa,CACnB,CAAK,EAEHtB,EAAOqB,EAAWnB,CAAI,EACnB,KAAKqB,GAAU,CACd,GAAIA,EAAO,KAAK,SAAW,EACzB,OAAAP,EAAQ,UAAY,GACbM,EAAS,MAAM,CACpB,QACE,2EACF,SAAU,aACpB,CAAS,EAEHN,EAAQ,mBAAmB,YAAaV,EAAOiB,EAAO,IAAI,CAAC,EAC3DC,EAAS,QAAO,CACtB,CAAK,EACA,MAAMnB,GAAS,CACd,QAAQ,IAAIA,CAAK,EACjBiB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gDACT,SAAU,UAClB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbL,EAAO,MAAM,QAAU,MAC7B,CAAK,CACL,CACA,MAAMO,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC"}